; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\spi.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\spi.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\app -I..\board -I..\cmsis -I..\lwip\src -I..\lwip\src\api -I..\lwip\src\arch -I..\lwip\src\core -I..\lwip\src\core\snmp -I..\lwip\src\include -I..\lwip\src\include\lwip -I..\lwip\src\include\ipv4 -I..\lwip\src\include\ipv4\lwip -I..\lwip\src\include\posix -I..\lwip\src\include\posix\sys -I..\lwip\src\netif -I..\lwip\src\netif\ppp -I..\stm_lib\inc -I..\stm_lib\src -I.\RTE\_lwip -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\spi.crf ..\lwip\src\arch\SPI.C]
                          THUMB

                          AREA ||i.SPI1_Init||, CODE, READONLY, ALIGN=2

                  SPI1_Init PROC
;;;30     ****************************************************************************/ 
;;;31     void SPI1_Init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;32     {
;;;33     	SPI_InitTypeDef  SPI_InitStructure;
;;;34     	GPIO_InitTypeDef GPIO_InitStructure;
;;;35     	
;;;36     	/* 使能SPI1时钟 */
;;;37     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);
000002  2101              MOVS     r1,#1
000004  b086              SUB      sp,sp,#0x18           ;32
000006  0308              LSLS     r0,r1,#12
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;38     	
;;;39     	/* 配置SPI1的SCK,MISO MOSI */
;;;40     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
00000c  20e0              MOVS     r0,#0xe0
00000e  f8ad0014          STRH     r0,[sp,#0x14]
;;;41     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000012  2501              MOVS     r5,#1
000014  f88d5016          STRB     r5,[sp,#0x16]
;;;42     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;			  //复用功能
000018  2018              MOVS     r0,#0x18
;;;43     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001a  4e1c              LDR      r6,|L1.140|
00001c  f88d0017          STRB     r0,[sp,#0x17]         ;42
000020  a905              ADD      r1,sp,#0x14
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       GPIO_Init
;;;44     	
;;;45     	/* 配置SPI1的ENC28J60片选 */
;;;46         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
000028  2410              MOVS     r4,#0x10
00002a  f8ad4014          STRH     r4,[sp,#0x14]
;;;47         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
00002e  f88d5016          STRB     r5,[sp,#0x16]
;;;48         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000032  f88d4017          STRB     r4,[sp,#0x17]
;;;49     	//GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;			  //复用功能
;;;50         GPIO_Init(GPIOA, &GPIO_InitStructure);
000036  a905              ADD      r1,sp,#0x14
000038  4630              MOV      r0,r6
00003a  f7fffffe          BL       GPIO_Init
;;;51     
;;;52     	GPIO_SetBits(GPIOA, GPIO_Pin_4);   
00003e  2110              MOVS     r1,#0x10
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       GPIO_SetBits
;;;53     
;;;54     	/* SPI1配置 */ 
;;;55     	SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
000046  2000              MOVS     r0,#0
000048  f8ad0000          STRH     r0,[sp,#0]
;;;56     	SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
00004c  f44f7182          MOV      r1,#0x104
000050  f8ad1002          STRH     r1,[sp,#2]
;;;57     	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
;;;58     	SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
;;;59     	SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
000054  f8ad0008          STRH     r0,[sp,#8]
;;;60     	SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
;;;61     	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_8;
000058  f8ad400c          STRH     r4,[sp,#0xc]
00005c  f8ad0004          STRH     r0,[sp,#4]            ;57
000060  0161              LSLS     r1,r4,#5              ;60
000062  f8ad0006          STRH     r0,[sp,#6]            ;58
;;;62     	SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
000066  f8ad000e          STRH     r0,[sp,#0xe]
;;;63     	SPI_InitStructure.SPI_CRCPolynomial = 7;
00006a  2007              MOVS     r0,#7
;;;64     	SPI_Init(SPI1, &SPI_InitStructure);
00006c  4c08              LDR      r4,|L1.144|
00006e  f8ad100a          STRH     r1,[sp,#0xa]          ;60
000072  f8ad0010          STRH     r0,[sp,#0x10]         ;63
000076  4669              MOV      r1,sp
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       SPI_Init
;;;65     	
;;;66     	/* 使能SPI1  */
;;;67     	SPI_Cmd(SPI1, ENABLE); 
00007e  2101              MOVS     r1,#1
000080  4620              MOV      r0,r4
000082  f7fffffe          BL       SPI_Cmd
;;;68     }
000086  b006              ADD      sp,sp,#0x18
000088  bd70              POP      {r4-r6,pc}
;;;69     
                          ENDP

00008a  0000              DCW      0x0000
                  |L1.140|
                          DCD      0x40010800
                  |L1.144|
                          DCD      0x40013000

                          AREA ||i.SPI1_ReadWrite||, CODE, READONLY, ALIGN=2

                  SPI1_ReadWrite PROC
;;;77     ****************************************************************************/ 
;;;78     unsigned char	SPI1_ReadWrite(unsigned char writedat)
000000  b570              PUSH     {r4-r6,lr}
;;;79     	{
;;;80     	/* Loop while DR register in not emplty */
;;;81     	while(SPI_I2S_GetFlagStatus(SPI1,SPI_I2S_FLAG_TXE) == RESET);
000002  4c0b              LDR      r4,|L2.48|
000004  4605              MOV      r5,r0                 ;79
                  |L2.6|
000006  2102              MOVS     r1,#2
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       SPI_I2S_GetFlagStatus
00000e  2800              CMP      r0,#0
000010  d0f9              BEQ      |L2.6|
;;;82     	
;;;83     	/* Send byte through the SPI1 peripheral */
;;;84     	SPI_I2S_SendData(SPI1, writedat);
000012  4629              MOV      r1,r5
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       SPI_I2S_SendData
                  |L2.26|
;;;85     	
;;;86     	/* Wait to receive a byte */
;;;87     	while(SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE) == RESET);
00001a  2101              MOVS     r1,#1
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       SPI_I2S_GetFlagStatus
000022  2800              CMP      r0,#0
000024  d0f9              BEQ      |L2.26|
;;;88     	
;;;89     	/* Return the byte read from the SPI bus */
;;;90     	return SPI_I2S_ReceiveData(SPI1);
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       SPI_I2S_ReceiveData
00002c  b2c0              UXTB     r0,r0
;;;91     	}
00002e  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

                  |L2.48|
                          DCD      0x40013000
